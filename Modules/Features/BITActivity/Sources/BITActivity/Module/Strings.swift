// swiftlint:disable all
// Generated using SwiftGen â€” https://github.com/SwiftGen/SwiftGen

import Foundation

// MARK: - L10n

// swiftlint:disable superfluous_disable_command file_length implicit_return prefer_self_in_static_references

// swiftlint:disable explicit_type_interface function_parameter_count identifier_name line_length
// swiftlint:disable nesting type_body_length type_name vertical_whitespace_opening_braces
enum L10n {
  /// Zurzeit sind keine AktivitÃ¤ten vorhanden
  static let activitiesEmptyStateText = L10n.tr("Localizable", "activities_empty_state_text", fallback: "Zurzeit sind keine AktivitÃ¤ten vorhanden")
  /// Leere AktivitÃ¤ten
  static let activitiesEmptyStateTitle = L10n.tr("Localizable", "activities_empty_state_title", fallback: "Leere AktivitÃ¤ten")
  /// LÃ¶schen
  static let activitiesItemDeleteButton = L10n.tr("Localizable", "activities_item_delete_button", fallback: "LÃ¶schen")
  /// Nachweis empfangen
  static let activitiesItemSubtitleCredentialReceived = L10n.tr("Localizable", "activities_item_subtitle_credentialReceived", fallback: "Nachweis empfangen")
  /// Nachweis prÃ¤sentiert
  static let activitiesItemSubtitlePresentationAccepted = L10n.tr("Localizable", "activities_item_subtitle_presentationAccepted", fallback: "Nachweis prÃ¤sentiert")
  /// Nachweis nicht prÃ¤sentiert
  static let activitiesItemSubtitlePresentationDeclined = L10n.tr("Localizable", "activities_item_subtitle_presentationDeclined", fallback: "Nachweis nicht prÃ¤sentiert")
  /// AktivitÃ¤ten
  static let activitiesTitle = L10n.tr("Localizable", "activities_title", fallback: "AktivitÃ¤ten")
  /// Angefragte Daten
  static let activityDetailsClaimsTitle = L10n.tr("Localizable", "activity_details_claims_title", fallback: "Angefragte Daten")
  /// LÃ¶schen
  static let activityDetailsMenuDeleteText = L10n.tr("Localizable", "activity_details_menu_delete_text", fallback: "LÃ¶schen")
  /// ÃœberprÃ¼fer
  static let activityDetailsVerifier = L10n.tr("Localizable", "activity_details_verifier", fallback: "ÃœberprÃ¼fer")
  /// pilotWallet
  static let appName = L10n.tr("Localizable", "app_name", fallback: "pilotWallet")
  /// Restliche AktivitÃ¤ten
  static let credentialActivitiesFooterText = L10n.tr("Localizable", "credential_activities_footer_text", fallback: "Restliche AktivitÃ¤ten")
  /// Letzte AktivitÃ¤ten
  static let credentialActivitiesHeaderText = L10n.tr("Localizable", "credential_activities_header_text", fallback: "Letzte AktivitÃ¤ten")
  /// Abbrechen
  static let credentialDeleteCancelButton = L10n.tr("Localizable", "credential_delete_cancel_button", fallback: "Abbrechen")
  /// Nachweis entfernen
  static let credentialDeleteConfirmButton = L10n.tr("Localizable", "credential_delete_confirm_button", fallback: "Nachweis entfernen")
  /// Wollen Sie den ausgewÃ¤hlten Nachweis wirklich entfernen? Ein erneutes HinzufÃ¼gen dieses Nachweises ist danach aus SicherheitsgrÃ¼nden nicht mehr mÃ¶glich.
  ///
  /// In dem Fall muss ein neuer Nachweis beim Strassenverkehrsamt bestellt werden.
  ///
  /// Beachten Sie, dass dabei alle Daten aus der pilotWallet gelÃ¶scht werden.
  static let credentialDeleteText = L10n.tr("Localizable", "credential_delete_text", fallback: "Wollen Sie den ausgewÃ¤hlten Nachweis wirklich entfernen? Ein erneutes HinzufÃ¼gen dieses Nachweises ist danach aus SicherheitsgrÃ¼nden nicht mehr mÃ¶glich.\n\nIn dem Fall muss ein neuer Nachweis beim Strassenverkehrsamt bestellt werden.\n\nBeachten Sie, dass dabei alle Daten aus der pilotWallet gelÃ¶scht werden.")
  /// Nachweis endgÃ¼ltig entfernen
  static let credentialDeleteTitle = L10n.tr("Localizable", "credential_delete_title", fallback: "Nachweis endgÃ¼ltig entfernen")
  /// Inhalt Nachweis
  static let credentialDetailNavigationTitle = L10n.tr("Localizable", "credential_detail_navigation_title", fallback: "Inhalt Nachweis")
  /// Nachweisinfo
  static let credentialDetailTitle = L10n.tr("Localizable", "credential_detail_title", fallback: "Nachweisinfo")
  /// AktivitÃ¤ten
  static let credentialMenuActivitiesText = L10n.tr("Localizable", "credential_menu_activities_text", fallback: "AktivitÃ¤ten")
  /// Nachweis entfernen
  static let credentialMenuDeleteText = L10n.tr("Localizable", "credential_menu_delete_text", fallback: "Nachweis entfernen")
  /// Inhalt Nachweis
  static let credentialMenuDetailsText = L10n.tr("Localizable", "credential_menu_details_text", fallback: "Inhalt Nachweis")
  /// Polizeikontrolle
  static let credentialMenuPoliceControlText = L10n.tr("Localizable", "credential_menu_police_control_text", fallback: "Polizeikontrolle")
  /// ZurÃ¼ck
  static let globalBack = L10n.tr("Localizable", "global_back", fallback: "ZurÃ¼ck")
  /// ZurÃ¼ck  zur Wallet
  static let globalBackHome = L10n.tr("Localizable", "global_back_home", fallback: "ZurÃ¼ck  zur Wallet")
  /// Abbrechen
  static let globalCancel = L10n.tr("Localizable", "global_cancel", fallback: "Abbrechen")
  /// Schliessen
  static let globalClose = L10n.tr("Localizable", "global_close", fallback: "Schliessen")
  /// n/a
  static let globalNotAssigned = L10n.tr("Localizable", "global_not_assigned", fallback: "n/a")
  /// Nochmals versuchen
  static let globalRetry = L10n.tr("Localizable", "global_retry", fallback: "Nochmals versuchen")
  /// Ihre Wallet ist leer. Bitte wenden Sie sich an das Strassenverkehrsamt Appenzell Ausserrhoden.
  static let homeEmptyViewHadCredentialsText = L10n.tr("Localizable", "home_empty_view_had_credentials_text", fallback: "Ihre Wallet ist leer. Bitte wenden Sie sich an das Strassenverkehrsamt Appenzell Ausserrhoden.")
  /// SchÃ¶n, dass Sie beim Piloten zum elektronischen Lernfahrausweis in Appenzell Ausserrhoden dabei sind.
  static let homeEmptyViewNoCredentialsIntroText = L10n.tr("Localizable", "home_empty_view_no_credentials_intro_text", fallback: "SchÃ¶n, dass Sie beim Piloten zum elektronischen Lernfahrausweis in Appenzell Ausserrhoden dabei sind.")
  /// https://www.eid.admin.ch/de/pilotprojekte
  static let homeEmptyViewNoCredentialsMoreInfoLink = L10n.tr("Localizable", "home_empty_view_no_credentials_more_info_link", fallback: "https://www.eid.admin.ch/de/pilotprojekte")
  /// Weitere Informationen
  static let homeEmptyViewNoCredentialsMoreInfoText = L10n.tr("Localizable", "home_empty_view_no_credentials_more_info_text", fallback: "Weitere Informationen")
  /// Ich habe keine SMS oder QR-Code erhalten.
  static let homeEmptyViewNoCredentialsQrCodeText = L10n.tr("Localizable", "home_empty_view_no_credentials_qr_code_text", fallback: "Ich habe keine SMS oder QR-Code erhalten.")
  /// https://forms.eid.admin.ch/elfa
  static let homeEmptyViewNoCredentialsScanLink = L10n.tr("Localizable", "home_empty_view_no_credentials_scan_link", fallback: "https://forms.eid.admin.ch/elfa")
  /// Gratulation zur TheorieprÃ¼fung ðŸŽ‰ Bitte SMS-Link anklicken oder QR-Code scannen, damit Sie Ihren elektronischen Lernfahrausweis in Ihre pilotWallet erhalten.
  static let homeEmptyViewNoCredentialsScanText = L10n.tr("Localizable", "home_empty_view_no_credentials_scan_text", fallback: "Gratulation zur TheorieprÃ¼fung ðŸŽ‰ Bitte SMS-Link anklicken oder QR-Code scannen, damit Sie Ihren elektronischen Lernfahrausweis in Ihre pilotWallet erhalten.")
  /// Ihr erster elektronischer Lernfahrausweis
  static let homeEmptyViewNoCredentialsTitle = L10n.tr("Localizable", "home_empty_view_no_credentials_title", fallback: "Ihr erster elektronischer Lernfahrausweis")
  /// Alle anzeigen
  static let homeLastActivityHeaderButton = L10n.tr("Localizable", "home_last_activity_header_button", fallback: "Alle anzeigen")
  /// LETZTE AKTIVITÃ„T
  static let homeLastActivityHeaderText = L10n.tr("Localizable", "home_last_activity_header_text", fallback: "LETZTE AKTIVITÃ„T")
  /// Scannen
  static let homeQrCodeScanButton = L10n.tr("Localizable", "home_qr_code_scan_button", fallback: "Scannen")
}

// swiftlint:enable explicit_type_interface function_parameter_count identifier_name line_length
// swiftlint:enable nesting type_body_length type_name vertical_whitespace_opening_braces

// MARK: - Implementation Details

extension L10n {
  private static func tr(_ table: String, _ key: String, _ args: CVarArg..., fallback value: String) -> String {
    let format = BundleToken.bundle.localizedString(forKey: key, value: value, table: table)
    return String(format: format, locale: Locale.current, arguments: args)
  }
}

// MARK: - BundleToken

// swiftlint:disable convenience_type
private final class BundleToken {
  static let bundle: Bundle = {
    #if SWIFT_PACKAGE
    return Bundle.module
    #else
    return Bundle(for: BundleToken.self)
    #endif
  }()
}

// swiftlint:enable convenience_type
